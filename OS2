#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/wait.h>
int main()
{
pid_t pid;
// Create a child process using fork()
pid = fork();
if (pid == -1) {
// Error in fork
perror("fork failed");
exit(1);
} else if (pid == 0) {
// Child process: Replace the child process with "ls"
printf("Child process (pid: %d)\n", getpid());
execlp("ls", "ls", NULL); // Replace the child process with "ls" command
// If exec fails
perror("execlp failed");
exit(1);
} else {
// Parent process: Wait for the child to finish
printf("Parent process (pid: %d), waiting for child to finish...\n", getpid());
wait(NULL); // Wait for the child process to finish
printf("Parent process: Child has finished.\n");
return 0;
}